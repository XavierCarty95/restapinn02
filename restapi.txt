API - Application Programming Interface 

REST - Representational State Transfe 

Application -  i.e Youtube 

Interface - endpoints to search youtube from code 

Examples of API's - Uber , Twitter , Google  Youtube 

Uber app , searching for ubers in our area , we can right code and search for different endpoints and users in our programming code and show that in our websites
and give use back data in JSON format 

Respresentational State Transfer 

-Architectual style of the web 
-A standard / set of guidelines by which we can structure & create API's
-REST API's have identifiable properties 

They make use of Http Methods 

- Get  - Used to retrieve data from the server 
- Post - Used to send data to the server 
- Put   - Used to update data 
- Delete - Used to delete data 

They make use of HTTP STATUS CODES 

200 MEAKS OK 
404 MEANS RESOURCE NOT FOUND 
505 MEANS SERVER ERROR

Npm init to get you node package module 
- using express for our api 
- in express whe send data from the website 
- and direct the data

Http methods telling the server what type of request we are making
-GET 
-POST
-PUT 
-DELETE

CRUD 

- Create a new stock 
   - Post Request
- Retreive (Reading) 
   - Get Request 
- Update 
    - Put request
- Delete 
  - DELETE request 


read / retrieving the stocks 
    - GET request to http://www.stocks.com/api/stock
    
create a new stock 

   - POST request to http://www.stocks.com/api/stock
   
update and existing stock 
  
    - Put request http://www.stocks.com/api/stock/id
    
Delete a stock 
 - delete stock 
       http://www.stocks.com/api/stock/id
       
       
using express , you can use without express but using express makes it easier

--save // make it so we dont have to keep installing express in developing
        saving to dependencies
        
use const to require your dependecies 

when making a request two parameters a request  and a response

-dev not necessary for our program to run but neccessar for our development tools


models.exports to use module in other files